*popset.txt* Pop selections for vim option settings.
*popset*


            _/_/_/                                              _/      
           _/    _/    _/_/    _/_/_/      _/_/_/    _/_/    _/_/_/_/   
          _/_/_/    _/    _/  _/    _/  _/_/      _/_/_/_/    _/        
         _/        _/    _/  _/    _/      _/_/  _/          _/         
        _/          _/_/    _/_/_/    _/_/_/      _/_/_/      _/_/      
                           _/                                           
                          _/                                            


================================================================================
Table of Contents                                                   *popset-toc*

1. Overview                                                    |popset-overview|
2. Usage                                                          |popset-usage|
 2.1 Installation                                          |popset-installation|
 2.2 Options Setting for popset                         |popset-options-setting|
 2.3 Colors Setting                                              |popset-colors|
3. Command                                                      |popset-command|
 3.1 PSet                                                                |:PSet|
4. Function                                                    |popset-function|
 4.1 PopSelection                                                 |PopSelection|
5. Configuration                                          |popset-configuration|
 5.1 g:Popset_SelectionData                             |g:Popset_SelectionData|
 5.2 g:Popset_CompleteAll                                 |g:Popset_CompleteAll|
 5.3 g:Popset_KeyQuit                                         |g:Popset_KeyQuit|
 5.4 g:Popset_KeyMoveCursorDown                     |g:Popset_KeyMoveCursorDown|
 5.5 g:Popset_KeyMoveCursorUp                         |g:Popset_KeyMoveCursorUp|
 5.6 g:Popset_KeyMoveCursorPgDown                 |g:Popset_KeyMoveCursorPgDown|
 5.7 g:Popset_KeyMoveCursorPgUp                     |g:Popset_KeyMoveCursorPgUp|
 5.8 g:Popset_KeyApplySelection                     |g:Popset_KeyApplySelection|
 5.9 g:Popset_KeyPreviewSelection                 |g:Popset_KeyPreviewSelection|
 5.10 g:Popset_KeyShowHelp                                |g:Popset_KeyShowHelp|
 5.11 g:Popset_MaxHeight                                    |g:Popset_MaxHeight|
6. License                                                      |popset-license|


================================================================================
1. Overview                                                    *popset-overview*

Popset is a vim plugin to Pop selections for vim option settings, which will be 
convinient for setting vim options.
Popset is inspired bySzymon Wrozynski plugin vim-CtrlSpapce and some plugin code
 of popset is based on vim-ctrlspace and Thanks a lot.

                                                                    |popset-toc|

================================================================================
2. Usage                                                          *popset-usage*

The easiest way is using a plugin like vundle or vim-plug to install popset and
use command :PSet to set vim options.
You can also map keys you prefered to the command :Pset.

                                                                    |popset-toc|

--------------------------------------------------------------------------------
 2.1 Installation                                          *popset-installation*

For a example of vim-plug, add following code to .vimrc: >

    Plug 'yehuohan/popset'
<

and call command PlugInstall.

                                                                    |popset-toc|

--------------------------------------------------------------------------------
 2.2 Options Setting for popset                         *popset-options-setting*

Set nocompatible options is required by popset: >

    set nocompatible
<

                                                                    |popset-toc|

--------------------------------------------------------------------------------
 2.3 Colors Setting                                              *popset-colors*

You can adjust plugin colors by changing PopsetNormal and PopsetSelected, the 
default vaule is: >

    hi link PopsetNormal   PMenu
    hi link PopsetSelected PMenuSel
<
PopsetNormal is menu-selections color and PopsetSelected is menu-cursor color.

                                                                    |popset-toc|

================================================================================
3. Command                                                      *popset-command*

                                                                    |popset-toc|

--------------------------------------------------------------------------------
 3.1 PSet                                                                *:PSet*

There is only one command PSet, which is similar to set command of vim, in 
popset.  For example: >

    :PSet foldmethod
<

In popset view, you can use following default command: >

    q       : Quit pop selection
    j       : Move the selection bar down
    k       : Move the selection bar up
    <C-j>   : Move the selection bar one screen down
    <C-k>   : Move the selection bar one screen up
    <CR>    : Load the selection
    <Space> : Previous the selection
    ?       : Show Help
<

To see all the surpported options of popset: >

    :PSet popset
<
                                                                    |popset-toc|


================================================================================
4. Function                                                    *popset-function*

                                                                    |popset-toc|

--------------------------------------------------------------------------------
 4.1 PopSelection                                                 *PopSelection*


PopSelection(`dictionary,` `flag)` is used to pop selections with given a
`dictionary` and a `flag.`
A `dictionary` example: >

    let g:profile = 
        \{
            \ "opt" : ["Which file is your want?"],
            \ "lst" : ["a.cpp", "b.vim", "c.md"]
            \ "dic" : {
                    \ "a.cpp" : "cpp file",
                    \ },
            \ "cmd" : "g:SetEcho",
        \}
    function! g:SetEcho(sopt, arg)
        echo  a:arg
    endfunction
<

The `flag` indicate whether previewing result of executing `cmd` is allowd or not.
`flag` can be ignored and the default value for `flag` is 1.
Following is the example showing how to call `PopSelection()` : >

    call PopSelection(g:Popset_SelectionData[0])
    call PopSelection(g:profile, 1)
<

                                                                    |popset-toc|

================================================================================
5. Configuration                                          *popset-configuration*

There some option in popset you can change to make popset more convinient for 
you.

                                                                    |popset-toc|

--------------------------------------------------------------------------------
 5.1 g:Popset_SelectionData                             *g:Popset_SelectionData*

This option can help you to add your own selections to popset. Following is the 
example code in .vimrc: >

    let g:Popset_SelectionData = [
        \{
            \ "opt" : ["filetype", "ft"],
            \ "lst" : ["cpp", "c", "python", "vim", "markdown", "text"],
            \ "dic" : {
                    \ "python" : "python script file",
                    \ "vim": "Vim script file",
                    \ },
            \ "cmd" : "g:SetEqual",
        \},
        \]
    function! g:SetEqual(sopt, arg)
        execute "set " . a:sopt . "=" . a:arg
    endfunction
<

The key `opt` is the option name list to add, `lst` is the selections of the 
`opt`, `dic` is simple description of `lst` and `dic` can be empty, and `cmd` 
is the function that must execute with `opt` and `lst` args. In the example 
code, for example, the `g:SetEqual` will function as `set filtype=cpp` if you 
choose the selenction `cpp` for `lst`. Of course, the `arg` can be any 
type(string, list, dictetory and so on) if you want.

If the `opt` your add had been existed in popset, popset will append the `lst` 
and `dic` (no `cmd`) but not override the existed one. Hence, the `opt` of 
options you add must be different to other `opt` of options, or you'll mix up 
the `lst` and `dic` of different options.


                                                                    |popset-toc|

--------------------------------------------------------------------------------
 5.2 g:Popset_CompleteAll                                 *g:Popset_CompleteAll*

This is used to set auto completion of PSet. Set this to 1 means that setting
PSet auto completion list to all command of vim, and 0 means that setting PSet
auto completion list to all command surpported by popset.

Default vaule: >

    let g:Popset_CompleteAll = 0
<

                                                                    |popset-toc|

--------------------------------------------------------------------------------
 5.3 g:Popset_KeyQuit                                         *g:Popset_KeyQuit*

Setting the keys to Quit pop selection.

Default vaule: >

    let g:Popset_KeyQuit = ["q", "Esc"]
<

                                                                    |popset-toc|

--------------------------------------------------------------------------------
 5.4 g:Popset_KeyMoveCursorDown                     *g:Popset_KeyMoveCursorDown*

Setting the keys to Move the selection bar down.

Default vaule: >

    let g:Popset_KeyMoveCursorDown = ["j"]
<
                                                                    |popset-toc|

--------------------------------------------------------------------------------
 5.5 g:Popset_KeyMoveCursorUp                         *g:Popset_KeyMoveCursorUp*

Setting the keys to Move the selection bar up.

Default vaule: >

    let g:Popset_KeyMoveCursorUp = ["k"]
<
                                                                    |popset-toc|

--------------------------------------------------------------------------------
 5.6 g:Popset_KeyMoveCursorPgDown                 *g:Popset_KeyMoveCursorPgDown*

Setting the keys to Move the selection bar one screen down. 

Default vaule: >

    let g:Popset_KeyMoveCursorPgDown = ["C-j"]
<
                                                                    |popset-toc|

--------------------------------------------------------------------------------
 5.7 g:Popset_KeyMoveCursorPgUp                     *g:Popset_KeyMoveCursorPgUp*

Setting the keys to Move the selection bar one screen up. 

Default vaule: >

    let g:Popset_KeyMoveCursorPgUp = ["C-k"]
<
                                                                    |popset-toc|

--------------------------------------------------------------------------------
 5.8 g:Popset_KeyApplySelection                     *g:Popset_KeyApplySelection*

Setting the keys to Load the selection.

Default vaule: >

    let g:Popset_KeyApplySelection = ["CR"]
<
                                                                    |popset-toc|

--------------------------------------------------------------------------------
 5.9 g:Popset_KeyPreviewSelection                 *g:Popset_KeyPreviewSelection*

Setting the keys to Previous the selection.

Default vaule: >

    let g:Popset_KeyPreviewSelection = ["Space"]
<
                                                                    |popset-toc|

--------------------------------------------------------------------------------
 5.10 g:Popset_KeyShowHelp                                 *g:Popset_KeyShowHelp*

Setting the keys to Show Help.

Default vaule: >

    let g:Popset_KeyShowHelp = ["?"]
<
                                                                    |popset-toc|


--------------------------------------------------------------------------------
 5.11 g:Popset_MaxHeight                                    *g:Popset_MaxHeight*

Setting the max height of popset-window. g:Popset_MaxHeight works when greater
than 0.

Default value: >

    let g:Popset_MaxHeight = 0
<

                                                                    |popset-toc|

================================================================================
6. License                                                      |popset-license|

MIT License

Copyright (c) 2017 yehuohan

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

                                                                    |popset-toc|



